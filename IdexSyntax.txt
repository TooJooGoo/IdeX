
request syntax
	The request is a multiline string. There are three types of lines: marker, param and function.

	marker line
		The marker, an alphanumeric string, is used by the receiver to approve a request. The marker line is optional. If present, the marker line is the first line in a request.

	param line
		A param line contains a parameter assignment. Name and value are separated by an equal sign. There may be many param lines in a request.

	function line
		A function line contains a function. The function is executed by the receiver. A function can have arguments and can return data. The return data is always written to the response. There may be many function lines in a request.


sample request
	The following six lines contain a sample request.

	1   IDEX
	2   ServerId = IdexServer
	3   ClientId = IdexClient
	4   Output.Write("[")
	5   Document.GetSelectedText()
	6   Output.Write("]")

	Line 1 is the marker line. Lines 2 and 3 are param lines. Lines 4, 5 and 6 are function lines. The line numbers are just for illustration and are not part of the request string. The request instructs the receiver to respond the currently selected text in the active document and enclose the text in square brackets.

supported params
	The IdeX syntax allows the following params:
	
	ServerId
		The ServerId stores the IdeX server identification. The client logic uses this parameter to locate the server process. This param is mandatory.
	
	ClientId
		The ClientId stores the IdeX client identification. The server logic uses this parameter to locate the client process. This param is mandatory.

supported functions
	The IdeX syntax allows the following functions.
	
	Base.GetServerId()
		Gets the server id.

	Base.SetServerId(serverId)
		Sets the server id.

	Base.GetServerHandle()
		Gets the handle of the server.

	Document.GetSelectedText()
		Gets the current selected text of the active document.
	
	Document.GetCaretLineIndex()
		Gets the line index of the caret.
	
	Document.GetCaretColumnIndex()
		Gets the column index of the caret.
	
	Document.GetSelectedStartLineIndex()
		Gets the line index where the current text selection starts.
	
	Document.GetSelectedEndLineIndex()
		Gets the line index where the current text selection ends.
	
	Document.GetSelectedRangeCount()
		Gets the count of selected text ranges.
	
	Document.GetSelectedStartCharIndex()
		Gets the char index where the current text selection starts.
	
	Document.GetSelectedEndCharIndex()
		Gets the char index where the current text selection ends.
	
	Document.GetOpenDocuments()
		Gets the documents currently opened in the editor window.

	SolutionExplorer.GetSelectedItems()
		Gets the items currently selected in the solution explorer.
	
	SolutionExplorer.GetSelectedItemCount()
		Gets the count of items currently selected in the solution explorer.
	
	Output.Write(text)
		Writes the given text to the response.
	
	Output.WriteCR()
		Writes a carriage return (\x0D) to the response.
	
	Output.WriteLF()
		Writes a linefeed (\0x0A) to the response.
	
	Output.WriteCRLF()
		Writes a carriage return linefeed combo (\x0D\0x0A) to the response.
	
	Output.WriteHT()
		Writes a horizontal tab (0x09) to the response.
	
	Output.WriteSP()
		Writes a space (\x20) to the response.
